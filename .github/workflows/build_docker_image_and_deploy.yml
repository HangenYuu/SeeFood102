name: Build Docker Container and Push to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'configs/deploy.yml'
      - 'app.py'
      - 'Dockerfile'
      - '.github/workflows'

env:
  REGISTRY: "registry.digitalocean.com/seefood102"
  IMAGE_NAME: "food102"

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build Docker image
        run: |
          docker build --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                       --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                       --no-cache --tag $REGISTRY/$IMAGE_NAME:latest .
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi
      
      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push $REGISTRY/$IMAGE_NAME:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Update deployment file
        run: sed -i "s|<IMAGE>|$REGISTRY/$IMAGE_NAME:latest|" $GITHUB_WORKSPACE/configs/deploy.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
      
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/configs/deploy.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/food102
